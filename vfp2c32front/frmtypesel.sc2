*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="frmtypesel.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "cparserh.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS frmtypesel AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="cmdBasetype" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdAbort" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkStruct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtTypename" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lstBasetypes" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdTypedef" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	AllowOutput = .F.
	AutoCenter = .T.
	BorderStyle = 1
	Caption = "Choose type"
	DoCreate = .T.
	Height = 333
	Icon = vfp2c32.ico
	MaxButton = .F.
	MinButton = .F.
	Name = "FRMTYPESEL"
	ShowWindow = 1
	Width = 403
	WindowType = 1
	_memberdata = <VFPData>

		</VFPData>		&& XML Metadata for customizable properties

	ADD OBJECT 'chkStruct' AS checkbox WITH ;
		Alignment = 0, ;
		Caption = "Struct/Union", ;
		FontName = "Tahoma", ;
		Height = 17, ;
		Left = 184, ;
		Name = "chkStruct", ;
		Top = 267, ;
		Value = .F., ;
		Width = 90
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'cmdAbort' AS commandbutton WITH ;
		Caption = "Abort", ;
		FontName = "Tahoma", ;
		Height = 27, ;
		Left = 159, ;
		Name = "cmdAbort", ;
		Top = 299, ;
		Width = 84
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdBasetype' AS commandbutton WITH ;
		Caption = "Choose Basetype", ;
		FontName = "Tahoma", ;
		Height = 27, ;
		Left = 204, ;
		Name = "cmdBasetype", ;
		Top = 12, ;
		Width = 120
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdTypedef' AS commandbutton WITH ;
		Caption = "Choose Typedef", ;
		FontName = "Tahoma", ;
		Height = 27, ;
		Left = 284, ;
		Name = "cmdTypedef", ;
		Top = 264, ;
		Width = 111
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'lstBasetypes' AS listbox WITH ;
		ColumnCount = 1, ;
		FontName = "Tahoma", ;
		Height = 239, ;
		Left = 12, ;
		Name = "lstBasetypes", ;
		RowSource = "laBasetypes", ;
		RowSourceType = 5, ;
		Top = 12, ;
		Width = 180
		*< END OBJECT: BaseClass="listbox" />

	ADD OBJECT 'txtTypename' AS textbox WITH ;
		FontName = "Tahoma", ;
		Height = 23, ;
		Left = 12, ;
		Name = "txtTypename", ;
		Top = 264, ;
		Width = 164
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE Load
		PUBLIC laBasetypes[1]
		SELECT ALLTRIM(typename), typemask FROM cbasetypes ;
		WHERE display = .T. ORDER BY typename INTO ARRAY laBasetypes
		
		
		
	ENDPROC

	PROCEDURE Unload
		RELEASE laBasetypes
		
		
	ENDPROC

	PROCEDURE cmdAbort.Click
		THISFORM.Release()
		
	ENDPROC

	PROCEDURE cmdBasetype.Click
		LOCAL lnIndex
		lnIndex = THIS.Parent.lstBasetypes.ListIndex
		IF lnIndex > 0
			REPLACE ctypedefs.basetype WITH ALLTRIM(laBasetypes[lnIndex,1])
			REPLACE ctypedefs.typemask WITH laBasetypes[lnIndex,2]
			THISFORM.Release()
		ELSE
			MESSAGEBOX("No basetype selected from listbox!",48,"VFP2C32")
		ENDIF
		
		
		
	ENDPROC

	PROCEDURE cmdTypedef.Click
		IF !EMPTY(THIS.Parent.txtTypename.Value)
			REPLACE ctypedefs.basetype WITH ALLTRIM(THIS.Parent.txtTypename.Value)
			REPLACE ctypedefs.typemask WITH IIF(THIS.Parent.chkStruct.Value,TM_STRUCT,0)
			THISFORM.Release()
		ELSE
			MESSAGEBOX("Enter the typedef name first!",48,"VFP2C32")
		ENDIF
		
		
	ENDPROC

ENDDEFINE
