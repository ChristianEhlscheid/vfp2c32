#ifndef _VFP2CMACROS_H__
#define _VFP2CMACROS_H__

// defines for easier access to VFP parameters (1 based)
// by value - vp = value parameter
#define vp1 (parm->p[0].val)
#define vp2 (parm->p[1].val)
#define vp3 (parm->p[2].val)
#define vp4 (parm->p[3].val)
#define vp5 (parm->p[4].val)
#define vp6 (parm->p[5].val)
#define vp7 (parm->p[6].val)
#define vp8 (parm->p[7].val)
#define vp9 (parm->p[8].val)
#define vp10 (parm->p[9].val)
#define vp11 (parm->p[10].val)
#define vp12 (parm->p[11].val)
#define vp13 (parm->p[12].val)
#define vp14 (parm->p[13].val)
#define vp15 (parm->p[14].val)
#define vp16 (parm->p[15].val)
#define vp17 (parm->p[16].val)
#define vp18 (parm->p[17].val)
#define vp19 (parm->p[18].val)
#define vp20 (parm->p[19].val)
#define vp21 (parm->p[20].val)
#define vp22 (parm->p[21].val)
#define vp23 (parm->p[22].val)
#define vp24 (parm->p[23].val)
#define vp25 (parm->p[24].val)
#define vp26 (parm->p[25].val)

// by reference
// rp = reference parameter
#define rp1 (parm->p[0].loc)
#define rp2 (parm->p[1].loc)
#define rp3 (parm->p[2].loc)
#define rp4 (parm->p[3].loc)
#define rp5 (parm->p[4].loc)
#define rp6 (parm->p[5].loc)
#define rp7 (parm->p[6].loc)
#define rp8 (parm->p[7].loc)
#define rp9 (parm->p[8].loc)
#define rp10 (parm->p[9].loc)
#define rp11 (parm->p[10].loc)
#define rp12 (parm->p[11].loc)
#define rp13 (parm->p[12].loc)
#define rp14 (parm->p[13].loc)
#define rp15 (parm->p[14].loc)
#define rp16 (parm->p[15].loc)
#define rp17 (parm->p[16].loc)
#define rp18 (parm->p[17].loc)
#define rp19 (parm->p[18].loc)
#define rp20 (parm->p[19].loc)
#define rp21 (parm->p[20].loc)
#define rp22 (parm->p[21].loc)
#define rp23 (parm->p[22].loc)
#define rp24 (parm->p[23].loc)
#define rp25 (parm->p[24].loc)
#define rp26 (parm->p[25].loc)

// count of parameters passed
#define PCount() (parm->pCount)

#endif // _VFP2CMACROS_H__